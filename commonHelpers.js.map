{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n// import axios from 'axios'; // Додано бібліотеку Axios\n\n// const searchForm = document.querySelector('.form');\n// const galleryContainer = document.querySelector('.gallery');\n// const loaderElement = document.querySelector('.loader');\n// const loadMoreButton = document.querySelector('.load-more-btn');\n\n// let searchParamsDefaults = {\n//   key: '41631198-f5cd04d694ed896bf4215baa6',\n//   image_type: 'photo',\n//   orientation: 'horizontal',\n//   safesearch: true,\n//   page: 1, // Додали початкове значення параметра page\n//   per_page: 40, // Змінили значення параметра per_page на 40\n\n// };\n\n// let currentSearchQuery = ''; // Глобальна змінна \n\n// function showLoaderAndHideGallery() {\n//   loaderElement.style.display = 'block';\n//   galleryContainer.style.display = 'none';\n//   loadMoreButton.style.display = 'none'; // Ховаємо кнопку при завантаженні\n// }\n\n// function hideLoaderAndShowGallery() {\n//   loaderElement.style.display = 'none';\n//   galleryContainer.style.display = 'flex';\n//   loadMoreButton.style.display = 'block'; // Показуємо кнопку після завантаження\n// }\n\n// function generateGalleryHTML(hits) {\n//   return hits.reduce((html, hit) => {\n//     const { largeImageURL, webformatURL, tags, likes, views, comments, downloads } = hit;\n//     return (\n//       html +\n//       `<li class=\"gallery-item\">\n//         <a href=${largeImageURL}> \n//           <img class=\"gallery-img\" src=${webformatURL} alt=${tags} />\n//         </a>\n//         <div class=\"gallery-text-box\">\n//           <p>Likes: <span class=\"text-value\">${likes}</span></p>\n//           <p>views: <span class=\"text-value\">${views}</span></p>\n//           <p>comments: <span class=\"text-value\">${comments}</span></p>\n//           <p>downloads: <span class=\"text-value\">${downloads}</span></p>\n//         </div>\n//       </li>`\n//     );\n//   }, '');\n// }\n\n// function renderGallery(hits) {\n//   const galleryHTML = generateGalleryHTML(hits);\n//   galleryContainer.innerHTML = galleryHTML;\n// }\n\n// function initializeImageLightbox() {\n//   let lightbox = new SimpleLightbox('.gallery a', {\n//     nav: true,\n//     captionDelay: 250,\n//     captionsData: 'alt',\n//     close: true,\n//     enableKeyboard: true,\n//     docClose: true,\n//   });\n//   lightbox.refresh();\n// }\n\n// function handleNoResults() {\n//   galleryContainer.style.display = 'none';\n//   iziToast.error({\n//     position: 'topRight',\n//     color: 'red',\n//     message: 'Sorry, there are no images matching your search query. Please try again!',\n//   });\n// }\n\n// async function searchImages(params) {\n//   showLoaderAndHideGallery();\n\n//   try {\n//     const response = await axios.get(`https://pixabay.com/api/?${params}`);\n//     hideLoaderAndShowGallery();\n\n//     if (response.status !== 200) {\n//       throw new Error(response.statusText);\n//     }\n\n//     const { hits } = response.data;\n\n//     if (hits.length > 0) {\n//       renderGallery(hits);\n//       initializeImageLightbox();\n//     } else {\n//       handleNoResults();\n//     }\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n\n// searchForm.addEventListener('submit', async (event) => {\n//   event.preventDefault();\n//   searchParamsDefaults.q = event.target.elements.search.value.trim();\n//   const searchParams = new URLSearchParams(searchParamsDefaults);\n//   await searchImages(searchParams);\n//   event.currentTarget.reset();\n// });\n\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport axios from 'axios';\n\nconst searchForm = document.querySelector('.form');\nconst galleryContainer = document.querySelector('.gallery');\nconst loaderElement = document.querySelector('.loader');\nconst loadMoreButton = document.querySelector('.load-more-btn');\n\nlet searchParamsDefaults = {\n  key: '41631198-f5cd04d694ed896bf4215baa6',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n  page: 1, // Додали початкове значення параметра page\n  per_page: 40, // Змінили значення параметра per_page на 40\n};\n\nlet currentSearchQuery = ''; // Глобальна змінна для збереження останнього пошукового запиту\n\nfunction showLoaderAndHideGallery() {\n  loaderElement.style.display = 'block';\n  galleryContainer.style.display = 'none';\n  loadMoreButton.style.display = 'none'; // Ховаємо кнопку при завантаженні\n}\n\nfunction hideLoaderAndShowGallery() {\n  loaderElement.style.display = 'none';\n  galleryContainer.style.display = 'flex';\n  loadMoreButton.style.display = 'block'; // Показуємо кнопку після завантаження\n}\n\nfunction generateGalleryHTML(hits) {\n  return hits.reduce((html, hit) => {\n    const { largeImageURL, webformatURL, tags, likes, views, comments, downloads } = hit;\n    return (\n      html +\n      `<li class=\"gallery-item\">\n        <a href=${largeImageURL}> \n          <img class=\"gallery-img\" src=${webformatURL} alt=${tags} />\n        </a>\n        <div class=\"gallery-text-box\">\n          <p>Likes: <span class=\"text-value\">${likes}</span></p>\n          <p>views: <span class=\"text-value\">${views}</span></p>\n          <p>comments: <span class=\"text-value\">${comments}</span></p>\n          <p>downloads: <span class=\"text-value\">${downloads}</span></p>\n        </div>\n      </li>`\n    );\n  }, '');\n}\n\nfunction renderGallery(hits) {\n  const galleryHTML = generateGalleryHTML(hits);\n  galleryContainer.innerHTML = galleryHTML;\n}\n\nfunction appendToGallery(hits) {\n  const galleryHTML = generateGalleryHTML(hits);\n  galleryContainer.innerHTML += galleryHTML;\n  initializeImageLightbox();\n}\n\nfunction initializeImageLightbox() {\n  let lightbox = new SimpleLightbox('.gallery a', {\n    nav: true,\n    captionDelay: 250,\n    captionsData: 'alt',\n    close: true,\n    enableKeyboard: true,\n    docClose: true,\n  });\n  lightbox.refresh();\n}\n\nfunction handleNoResults() {\n  galleryContainer.style.display = 'none';\n  iziToast.error({\n    position: 'topRight',\n    color: 'red',\n    message: 'Sorry, there are no images matching your search query. Please try again!',\n  });\n}\n\nasync function searchImages(params, append = false) {\n  if (!append) {\n    showLoaderAndHideGallery();\n  }\n\n  try {\n    const response = await axios.get(`https://pixabay.com/api/?${params}`);\n    hideLoaderAndShowGallery();\n\n    if (response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n\n    const { hits } = response.data;\n\n    if (hits.length > 0) {\n      if (append) {\n        appendToGallery(hits);\n      } else {\n        renderGallery(hits);\n      }\n\n      initializeImageLightbox();\n    } else {\n      handleNoResults();\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nsearchForm.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  searchParamsDefaults.q = event.target.elements.search.value.trim();\n  currentSearchQuery = searchParamsDefaults.q; // Зберігаємо останній пошуковий запит\n  searchParamsDefaults.page = 1; // Скидаємо значення page при новому пошуку\n  await searchImages(new URLSearchParams(searchParamsDefaults));\n  event.currentTarget.reset();\n});\n\n// Додаємо обробник події для кнопки \"Load more\"\nloadMoreButton.addEventListener('click', () => {\n  searchParamsDefaults.page++; // Збільшуємо значення page перед новим запитом\n  searchImages(new URLSearchParams(searchParamsDefaults), true);\n});\n\n// Приховуємо кнопку \"Load more\", поки галерея пуста\nloadMoreButton.style.display = 'none';"],"names":["searchForm","galleryContainer","loaderElement","loadMoreButton","searchParamsDefaults","showLoaderAndHideGallery","hideLoaderAndShowGallery","generateGalleryHTML","hits","html","hit","largeImageURL","webformatURL","tags","likes","views","comments","downloads","renderGallery","galleryHTML","appendToGallery","initializeImageLightbox","SimpleLightbox","handleNoResults","iziToast","searchImages","params","append","response","axios","error","event"],"mappings":"owBAwHA,MAAMA,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAgB,SAAS,cAAc,SAAS,EAChDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAuB,CACzB,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAM,EACN,SAAU,EACZ,EAIA,SAASC,GAA2B,CAClCH,EAAc,MAAM,QAAU,QAC9BD,EAAiB,MAAM,QAAU,OACjCE,EAAe,MAAM,QAAU,MACjC,CAEA,SAASG,GAA2B,CAClCJ,EAAc,MAAM,QAAU,OAC9BD,EAAiB,MAAM,QAAU,OACjCE,EAAe,MAAM,QAAU,OACjC,CAEA,SAASI,EAAoBC,EAAM,CACjC,OAAOA,EAAK,OAAO,CAACC,EAAMC,IAAQ,CAChC,KAAM,CAAE,cAAAC,EAAe,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,EAAGP,EACjF,OACED,EACA;AAAA,kBACYE;AAAA,yCACuBC,SAAoBC;AAAA;AAAA;AAAA,+CAGdC;AAAA,+CACAC;AAAA,kDACGC;AAAA,mDACCC;AAAA;AAAA,YAIhD,EAAE,EAAE,CACP,CAEA,SAASC,EAAcV,EAAM,CAC3B,MAAMW,EAAcZ,EAAoBC,CAAI,EAC5CP,EAAiB,UAAYkB,CAC/B,CAEA,SAASC,EAAgBZ,EAAM,CAC7B,MAAMW,EAAcZ,EAAoBC,CAAI,EAC5CP,EAAiB,WAAakB,EAC9BE,GACF,CAEA,SAASA,GAA0B,CAClB,IAAIC,EAAe,aAAc,CAC9C,IAAK,GACL,aAAc,IACd,aAAc,MACd,MAAO,GACP,eAAgB,GAChB,SAAU,EACd,CAAG,EACQ,QAAO,CAClB,CAEA,SAASC,GAAkB,CACzBtB,EAAiB,MAAM,QAAU,OACjCuB,EAAS,MAAM,CACb,SAAU,WACV,MAAO,MACP,QAAS,0EACb,CAAG,CACH,CAEA,eAAeC,EAAaC,EAAQC,EAAS,GAAO,CAC7CA,GACHtB,IAGF,GAAI,CACF,MAAMuB,EAAW,MAAMC,EAAM,IAAI,4BAA4BH,GAAQ,EAGrE,GAFApB,IAEIsB,EAAS,SAAW,IACtB,MAAM,IAAI,MAAMA,EAAS,UAAU,EAGrC,KAAM,CAAE,KAAApB,CAAI,EAAKoB,EAAS,KAEtBpB,EAAK,OAAS,GACZmB,EACFP,EAAgBZ,CAAI,EAEpBU,EAAcV,CAAI,EAGpBa,KAEAE,GAEH,OAAQO,EAAP,CACA,QAAQ,MAAMA,CAAK,CACpB,CACH,CAEA9B,EAAW,iBAAiB,SAAU,MAAO+B,GAAU,CACrDA,EAAM,eAAc,EACpB3B,EAAqB,EAAI2B,EAAM,OAAO,SAAS,OAAO,MAAM,OACvC3B,EAAqB,EAC1CA,EAAqB,KAAO,EAC5B,MAAMqB,EAAa,IAAI,gBAAgBrB,CAAoB,CAAC,EAC5D2B,EAAM,cAAc,OACtB,CAAC,EAGD5B,EAAe,iBAAiB,QAAS,IAAM,CAC7CC,EAAqB,OACrBqB,EAAa,IAAI,gBAAgBrB,CAAoB,EAAG,EAAI,CAC9D,CAAC,EAGDD,EAAe,MAAM,QAAU"}